---
import type { CollectionEntry } from "astro:content";
import OptimizedCover from "@components/OptimizedPicture.astro";
import FormattedDate from "@components/FormattedDate.astro";

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;

function truncateUTF8String(str: string, maxBytes: number) {
  let byteCount = 0;
  let index = 0;
  while (index < str.length && byteCount < maxBytes) {
    const char = str.charCodeAt(index);
    if (char > 0x7ff) {
      byteCount += 3;
    } else if (char > 0x7f) {
      byteCount += 2;
    } else {
      byteCount += 1;
    }
    if (byteCount <= maxBytes) index++;
    else break;
  }
  return str.slice(0, index) + (index < str.length ? "..." : "");
}

const truncatedDescription = truncateUTF8String(post.data.description, 150);

// const image = (await import(post.data.cover)).default;

---

<div class="relative overflow-hidden rounded-xl border bg-white transition-transform duration-500 hover:-translate-y-1 hover:scale-105 md:flex md:flex-row dark:border-neutral-600 dark:bg-neutral-900" >
  <a href={`/posts/${post.slug}/`} class="block md:flex md:flex-1">
    <div class="md:w-1/2">
      <OptimizedCover src={post.data.cover} alt={post.data.coverAlt}  class="aspect-square w-full object-cover"/>
    </div>
    <div class="absolute h-full bottom-0 end-0 start-0 bg-gradient-to-t from-transparent via-white to-white md:relative md:flex md:w-1/2 md:flex-col md:justify-start md:bg-transparent md:p-5" >
      <div class="flex flex-col backdrop-blur-[1px] h-full justify-end absolute inset-x-0 bottom-5 pl-2 pb-2 md:mt-3 md:pl-10 md:pt-10 md:flex md:flex-col md:justify-start">
        <h3 class="text-2xl font-bold text-white md:text-neutral-900 dark:text-white ">
          {post.data.title}
        </h3>
       
          <div  class="text-md whitespace-nowrap text-white md:text-neutral-900 dark:text-white " set:html={post.data.description}></div>
        
      </div>
      </div>
   
  </a>
</div>